name: Secure CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-scans:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          pip install safety bandit
          npm install -g snyk

      - name: Run Static Code Analysis (Bandit for Python)
        run: bandit -r .

      - name: Run Dependency Scanning (Snyk)
        run: snyk test || true

      - name: Infrastructure as Code Security Scan (Checkov)
        uses: bridgecrewio/checkov-action@v12
        with:
          framework: terraform

  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: security-scans
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Unit Tests
        run: pytest --junitxml=test-results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml

  build-container:
    name: Build & Scan Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/app:latest .

      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}/app:latest'
          format: 'table'

      - name: Push Image to Registry
        run: |
          docker push ghcr.io/${{ github.repository }}/app:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-container
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Deploy with Helm
        run: |
          helm upgrade --install myapp ./helm/ \
            --namespace myapp \
            --set image.repository=ghcr.io/${{ github.repository }}/app \
            --set image.tag=latest

      - name: Verify Deployment
        run: kubectl get pods -n myapp